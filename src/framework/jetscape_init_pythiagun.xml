<?xml version="1.0"?>
<!-- Just for test purposes! -->
<!-- More details and final format to be determined ... -->
<jetscape>

  <debug> on </debug>
  <remark> off </remark>
  <vlevel> 0 </vlevel>

  <!--  If for example one wants to run JetScape purely via xml ... -->
   <Tasks>
     <task>Matter</task>
     <task>Hydro1</task>
   </Tasks>

   <!-- Inital State Module ... -->
   <IS>
     <!-- x range [-grid_max_x, grid_max_x] -->
     <!-- y range [-grid_max_y, grid_max_y]-->
     <!-- longitudinal range [-grid_max_z, grid_max_z]-->
     <!-- in units of [fm] -->
     <grid_max_x> 10 </grid_max_x>
     <grid_max_y> 10 </grid_max_y>
     <grid_max_z> 0 </grid_max_z>
     <grid_step_x> 0.2 </grid_step_x>
     <grid_step_y> 0.2 </grid_step_y>
     <grid_step_z> 0.2 </grid_step_z>
     
     <Trento use_module="pre_defined">
         <!-- pre-defined system: default collisions have auau200, pbpb2760, pbpb5020, more in the future -->
         <pre_defined collision_system="auau200" centrality_min="30" centrality_max="40" />
         <!-- user-defined system: to get one event in 0-100% centrality range -->
         <user_defined projectile="Au" target="Au" sqrts="200" cross_section="4.2" />
     </Trento>
   </IS>

   <!-- Hard Process/Pythia to be included -->

   <Hard>

     <!-- Pythia Gun test, currently with fixed IS pos = 0 -->
     <!-- Sensible defaults are set in the class. ptHat etc. get their own field -->
     <!-- Will try to provide a functionality to read in any command lines as well -->
     <PythiaGun>
       <name>PythiaGun</name>
       <pTHatMin>20</pTHatMin>
       <pTHatMax>25</pTHatMax>
       <eCM>200</eCM>
       <LinesToRead>
	 HardQCD:all = on	 
       </LinesToRead>
     </PythiaGun>     
   </Hard>
   
   
   <!--Eloss Module ... -->
   <Eloss>

     <deltaT>1</deltaT>
     <maxT>10</maxT>

     <!-- Individual Eloss Modules run Eloss and Eloss Manager ... -->
     <!-- Just a test here (no physics implemented in Matter and Martini ... -->
     <Matter>
       <name>Matter</name>
       <param1> 2 </param1>
       <qhat> 1.0 </qhat>
     </Matter>
     
     <Martini>
       <name > Martini </name>
       <param1> 3 </param1>
     </Martini>
     
   </Eloss>

   <!-- Hydro  Module ... -->
   <Hydro>
     
     <Hydro1>
       <name>Hydro1</name>
       <eta> 0.2 </eta>
     </Hydro1>

     <!-- Test Brick ... -->
     <Brick>
       <name>Brick</name>
       <T>0.3</T>
     </Brick>

     <!-- Test Gubser ... -->
     <Gubser>
     </Gubser>
     
     <!-- hydro from a file ... -->
     <hydro_from_file>
         <name> hydro from a file </name>
         <!-- read in file type ... -->
         <!-- hydro_type == 1 read in evo file from VISHNew... -->
         <!-- hydro_type == 2 read in evo file from MUSIC... -->
         <hydro_type>2</hydro_type>
         <!-- VISHNew hydro evolution filename (hdf5 format)... -->
         <VISH_file>test/test_hydro_files/VISH_evo.h5</VISH_file>
         <!-- flag whether read in viscous information -->
         <!-- (only works for VISHNew evo files)... -->
         <load_viscous_info>False</load_viscous_info>
         <!-- MUSIC hydro evolution filename (plain binary format)... -->
         <!-- the associated input file specifies the grid information -->
         <MUSIC_input_file>test/test_hydro_files/MUSIC_input</MUSIC_input_file>
         <MUSIC_file>test/test_hydro_files/MUSIC_evo.dat</MUSIC_file>
         <!-- transition temperature between QGP and Hadron Resonance Gas -->
         <T_c>0.154</T_c>
         <!-- read in hydro evo file every Ntau step -->
         <!-- (only works for MUSIC evo files)... -->
         <read_hydro_every_ntau>1</read_hydro_every_ntau>
     </hydro_from_file>
     
     <!-- MUSIC ... -->
     <MUSIC>
         <name>MUSIC</name>
         <MUSIC_input_file>test/test_music_files/music_input_mode_2</MUSIC_input_file>
     </MUSIC>
     
   </Hydro>
   
</jetscape>
